{"version":3,"file":"table-wizard.3362f8bc.js","mappings":"yBAEA,MAAMA,EAAmB,IAAIC,QAEvBC,EAAQC,IAEV,GAAIH,EAAiBI,IAAID,GACrB,OAGJH,EAAiBK,IAAIF,GAAM,GAE3BA,EAAKG,QAAQ,SAASC,UAAUC,IAAI,oBAEpC,MAAMC,EAAON,EAAKO,cAAc,WAAaC,SAASC,cAAc,UAC9DC,EAAUV,EAAKO,cAAc,QAAUC,SAASC,cAAc,OAC9DE,EAAWX,EAAKO,cAAc,YAEpCD,EAAKM,KAAO,SACZN,EAAKO,UAAY,qBACjBP,EAAKQ,UAAYd,EAAKG,QAAQ,mBAAmBY,QAAQC,SACzDV,EAAKW,iBAAiB,SAAS,IAAMC,EAAMR,EAASC,KAEpDD,EAAQG,UAAY,cACpBH,EAAQS,UAAYR,EAASS,MAE7BpB,EAAKqB,QAAQf,EAAMI,GACnBV,EAAKO,cAAc,YAAYe,MAAMC,QAAU,MAAM,EAGnDL,EAAQA,CAACM,EAAWC,KACtB,MAAMC,EAAMD,EAAWtB,QAAQ,mBAAmBY,QAAQY,OACpDC,EAAI,IAAIC,YAAY,CACtBC,MAAO,OACPC,WAAW,EACXC,eAAgB,GAChBC,OAAQ,WACJzB,SAAS0B,KAAKZ,MAAMa,SAAW,QACnC,EACAC,OAAQ,WACJ5B,SAAS0B,KAAKZ,MAAMa,SAAW,EACnC,EACAE,SAAU,WACN,MAAMC,EAAMC,OAAOC,OAAO,4BAEdC,IAARH,EAKJA,EAAII,OAAS,WACTJ,EAAI9B,SAASmC,eAAe,oBAAoBvB,MAAQI,EAAUL,UAElEyB,YAAW,WACPN,EAAIO,QAAQC,aAAaC,WAAWvB,EAAUL,UAClD,GAAG,KAEHS,EAAEoB,QAAQC,SAAQ,SAASC,GACvBA,EAAO9C,UAAU+C,OAAO,eAC5B,GACJ,EAdIC,MAAM,uCAed,IAEJxB,EAAEyB,UAAUC,OAAOC,KAAKC,OAAQ,OAAO,WACnCC,KAAKC,MACT,IACA9B,EAAEyB,UAAUC,OAAOC,KAAKI,MAAO,eAAe,WAC1C,MAAMrB,EAAMC,OAAOC,OAAO,uBAE1B,QAAYC,IAARH,EAEA,YADAc,MAAM,wCAIV,MAAM1C,EAAU4B,EAAIO,QAAQC,aAAac,aAEzCnC,EAAWL,MAAQV,EACnBc,EAAUL,UAAYT,EAEtB+C,KAAKC,MACT,IACA9B,EAAEiC,KAAK,CACH,MAAS,QACT,MAASpC,EAAWtB,QAAQ,mBAAmBY,QAAQC,SACvD,SAAY,gBAAgBU,sDAA6E,GAArBa,OAAOuB,0CAC7F,EAGNtD,SAASuD,iBAAiB,+BAA+Bd,QAAQlD,GAEjE,IAAIiE,kBAAiB,SAASC,GAC1B,IAAK,MAAMC,KAAYD,EACG,cAAlBC,EAAStD,MACTsD,EAASC,WAAWlB,SAAQ,SAASmB,GACjCC,QAAQC,IAAIF,GACRA,EAAQG,SAAWH,EAAQG,QAAQ,+BACnCxE,EAAKqE,GACEA,EAAQG,SAAWH,EAAQG,QAAQ,sBAC1CH,EAAQL,iBAAiB,eAAed,SAASuB,IAC7CzE,EAAKyE,EAAG,GAGpB,GAGZ,IAAGC,QAAQjE,SAAU,CACjBkE,YAAY,EACZC,WAAW,EACXC,SAAS,G","sources":["webpack://@terminal42/contao-rte_table/./assets/table-wizard.js"],"sourcesContent":["import './table-wizard.scss';\n\nconst initializedCells = new WeakMap();\n\nconst init = (cell) => {\n    // Check if this cell has already been initialized\n    if (initializedCells.has(cell)) {\n        return;\n    }\n\n    initializedCells.set(cell, true);\n\n    cell.closest('table').classList.add('rte-table-wizard');\n\n    const link = cell.querySelector('button') || document.createElement('button');\n    const content = cell.querySelector('div') || document.createElement('div');\n    const textarea = cell.querySelector('textarea');\n\n    link.type = 'button';\n    link.className = 'tl_submit rte-edit';\n    link.innerText = cell.closest('#tl_tablewizard').dataset.rteLabel;\n    link.addEventListener('click', () => click(content, textarea));\n\n    content.className = 'rte-content'\n    content.innerHTML = textarea.value;\n\n    cell.prepend(link, content);\n    cell.querySelector('textarea').style.display = 'none';\n};\n\nconst click = (contentEl, textareaEl) => {\n    const url = textareaEl.closest('#tl_tablewizard').dataset.rteUrl;\n    const M = new SimpleModal({\n        width: '80vw',\n        draggable: false,\n        overlayOpacity: .5,\n        onShow: function () {\n            document.body.style.overflow = 'hidden';\n        },\n        onHide: function () {\n            document.body.style.overflow = '';\n        },\n        onAppend: function () {\n            const frm = window.frames['simple-modal-iframe'];\n\n            if (frm === undefined) {\n                alert('Could not find the SimpleModal frame');\n                return;\n            }\n\n            frm.onload = function () {\n                frm.document.getElementById('rte-table-editor').value = contentEl.innerHTML;\n\n                setTimeout(function () {\n                    frm.tinyMCE.activeEditor.setContent(contentEl.innerHTML);\n                }, 100);\n\n                M.buttons.forEach(function(button) {\n                    button.classList.remove('btn-disabled');\n                });\n            };\n        }\n    });\n    M.addButton(Contao.lang.cancel, 'btn', function () {\n        this.hide();\n    });\n    M.addButton(Contao.lang.apply, 'btn primary', function () {\n        const frm = window.frames['simple-modal-iframe'];\n\n        if (frm === undefined) {\n            alert('Could not find the SimpleModal frame');\n            return;\n        }\n\n        const content = frm.tinyMCE.activeEditor.getContent();\n\n        textareaEl.value = content;\n        contentEl.innerHTML = content;\n\n        this.hide();\n    });\n    M.show({\n        'model': 'modal',\n        'title': textareaEl.closest('#tl_tablewizard').dataset.rteLabel,\n        'contents': `<iframe src=\"${url}\" name=\"simple-modal-iframe\" width=\"100%\" height=\"${window.innerHeight * 0.8}\" frameborder=\"0\"></iframe>`\n    });\n};\n\ndocument.querySelectorAll('#tl_tablewizard .tcontainer').forEach(init);\n\nnew MutationObserver(function(mutationsList) {\n    for (const mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n            mutation.addedNodes.forEach(function(element) {\n                console.log(element);\n                if (element.matches && element.matches('#tl_tablewizard .tcontainer')) {\n                    init(element);\n                } else if (element.matches && element.matches('#tl_tablewizard *')) {\n                    element.querySelectorAll('.tcontainer').forEach((el) => {\n                        init(el);\n                    })\n                }\n            })\n        }\n    }\n}).observe(document, {\n    attributes: false,\n    childList: true,\n    subtree: true\n});\n"],"names":["initializedCells","WeakMap","init","cell","has","set","closest","classList","add","link","querySelector","document","createElement","content","textarea","type","className","innerText","dataset","rteLabel","addEventListener","click","innerHTML","value","prepend","style","display","contentEl","textareaEl","url","rteUrl","M","SimpleModal","width","draggable","overlayOpacity","onShow","body","overflow","onHide","onAppend","frm","window","frames","undefined","onload","getElementById","setTimeout","tinyMCE","activeEditor","setContent","buttons","forEach","button","remove","alert","addButton","Contao","lang","cancel","this","hide","apply","getContent","show","innerHeight","querySelectorAll","MutationObserver","mutationsList","mutation","addedNodes","element","console","log","matches","el","observe","attributes","childList","subtree"],"sourceRoot":""}